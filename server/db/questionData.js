const questionData = [
  {
    questionNumber: 1,
    category: "test",
    question: "What's the worst part about coding interviews?",
    answerOne: "XAlgos",
    answerTwo: "CGetting the interview in the first place",
    answerThree: "XNetworking",
    answerFour: "XMaking it to the final round and they change the offer",
    answerFive: "XWhat's a coding interview?",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 2,
    category: "JavaScript Basics",
    question: "What is JavaScript?",
    answerOne: "CA scripting language used to make the website interactive",
    answerTwo: "XAn assembly language used to make the website interactive",
    answerThree: "XA compiled language used to make the website interactive",
    answerFour: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 3,
    category: "JavaScript Basics",
    question: "Which of the following is correct about JavaScript?",
    answerOne: "CIt's an object-based language",
    answerTwo: "XIt's an assembly-language",
    answerThree: "XIt's an object-oriented language",
    answerFour: "XIt's a high-level language",
    answerFive: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 4,
    category: "JavaScript Basics",
    question: "Among the given statements, which statement defines closures in JavaScript?",
    answerOne:
      "XJavaScript is a function that is enclosed with references to its inner function scope",
    answerTwo:
      "CJavaScript is a function that is enclosed with references to its lexical environment",
    answerThree:
      "XJavaScript is a function that is enclosed with the object to its inner function scope",
    answerFour: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 5,
    category: "JavaScript Basics",
    question: "Arrays in JavaScript are defined by which of the following statements?",
    answerOne: "CIt is an ordered list of values",
    answerTwo: "XIt is an ordered list of objects",
    answerThree: "XIt is an ordered list of strings",
    answerFour: "XIt is an ordered list of functions",
    answerFive: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 6,
    category: "JavaScript Basics",
    question:
      "Which of the following object is the main entry point to all client-side JavaScript features and APIs?",
    answerOne: "XPosition",
    answerTwo: "CWindow",
    answerThree: "XStandard",
    answerFour: "XLocation",
    answerFive: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 7,
    category: "JavaScript Basics",
    question: "Which of the following scoping type does JavaScript use?",
    answerOne: "XSequential",
    answerTwo: "XSegmental",
    answerThree: "CLexical",
    answerFour: "XLiteral",
    answerFive: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 8,
    category: "JavaScript Basics",
    question: "What is the basic difference between JavaScript and Java?",
    answerOne: "XFunctions are considered fields",
    answerTwo: "CFunctions are values, and there is no hard distinction between methods and fields",
    answerThree: "XVariables are specific",
    answerFour: "XThere are no differences",
    timesCorrect: 4,
    timesIncorrect: 2,
  },
  {
    questionNumber: 9,
    category: "JavaScript Basics",
    question: "What is the basic difference between JavaScript and Java?",
    answerOne: "XFunctions are considered fields",
    answerTwo: "CFunctions are values, and there is no hard distinction between methods and fields",
    answerThree: "XVariables are specific",
    answerFour: "XThere are no differences",
    answerFive: "XNone of the above",
    timesCorrect: 4,
    timesIncorrect: 2,
  },

  //big o
  {
    questionNumber: 10,
    category: "Time and Space Complexity",
    question: "What is the time complexity of the 'splice' method in JavaScript?",
    answerOne: "XConstant (O(1))",
    answerTwo: "CLinear (O(n))",
    answerThree: "XQuadratic (O(n^2))",
    answerFour: "XLogarithmic (O(log n))",
    answerFive: "XExponential (O(2^n))",
    timesCorrect: 2,
    timesIncorrect: 6,
  },
  {
    questionNumber: 11,
    category: "Time and Space Complexity",
    question: "What is the space complexity of a recursive function?",
    answerOne: "XConstant (O(1))",
    answerTwo: "CLinear (O(n))",
    answerThree: "XQuadratic (O(n^2))",
    answerFour: "XLinear (O(log n))",
    answerFive: "XExponential (O(2^n))",
  },

  {
    questionNumber: 12,
    category: "Time and Space Complexity",
    question: "Which sorting algorithm has the best average-case time complexity?",
    answerOne: "XBubble Sort",
    answerTwo: "CMerge Sort",
    answerThree: "XSelection Sort",
    answerFour: "XQuick Sort",
    answerFive: "XInsertion Sort",
    timesCorrect: 1,
    timesIncorrect: 4,
  },
  {
    questionNumber: 13,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: Array (unsorted) -- Deletion",
    answerOne: "XO(1)",
    answerTwo: "CO(N)",
    answerThree: "XO(log(n))",
    answerFour: "XO(n log(n))",
    answerFive: "XO(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },
  {
    questionNumber: 14,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: Splay Tree (unsorted) -- Search(Average)",
    answerOne: "XO(1)",
    answerTwo: "XO(N)",
    answerThree: "CO(log(n))",
    answerFour: "XO(n log(n))",
    answerFive: "XO(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },
  {
    questionNumber: 15,
    category: "Time and Space Complexity",
    question: "Data Structure Ops: AVL Tree (unsorted) -- Insertion(worst)",
    answerOne: "XO(1)",
    answerTwo: "XO(N)",
    answerThree: "CO(log(n))",
    answerFour: "XO(n log(n))",
    answerFive: "XO(m)",
    timesCorrect: 1,
    timesIncorrect: 4,
  },

  // //////////////linked lists ////////////
  //// source https://www.interviewbit.com/linked-list-mcq/ ////

  {
    questionNumber: 16,
    category: "Linked Lists",
    question: "What information is stored in a doubly-linked list's nodes?",
    answerOne: "XValue of node",
    answerTwo: "XAddress of next node",
    answerThree: "XAddress of previous node",
    answerFour: "CAll of the above",
    // answerFive: "",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 17,
    category: "Linked Lists",
    question: "What is the optimal time complexity to count the number of nodes in a linked list?",
    answerOne: "CO(n)",
    answerTwo: "XO(1)",
    answerThree: "XO(log n)",
    answerFour: "XNone of the above",
    // answerFive: "",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 18,
    category: "Linked Lists",
    question: "Which of the following are applications of linked lists?",
    answerOne: "XImplementing file systems",
    answerTwo: "XChaining in hash tables",
    answerThree: "Xbinary tree implementation",
    answerFour: "CAll of the above",
    // answerFive: "",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 19,
    category: "Linked Lists",
    question:
      "Insertion of an element at the middle of a linked list requires the modification of how many pointers?",
    answerOne: "C2",
    answerTwo: "X1",
    answerThree: "X3",
    answerFour: "X4",
    // answerFive: "",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 20,
    category: "Linked Lists",
    question:
      "Insertion of an element at the end of a linked list requires the modification of how many pointers?",
    answerOne: "X2",
    answerTwo: "C1",
    answerThree: "X3",
    answerFour: "X4",
    // answerFive: "",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 21,
    category: "Linked Lists",
    question:
      "In the worst case, the number of comparisons needed to search a singly linked list of length n for a given element will be?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n+m)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 22,
    category: "Linked Lists",
    question: "Which of the following algos is not feasible to implement in a linked list??",
    answerOne: "XLinear Search",
    answerTwo: "CBinary Search",
    answerThree: "XMerge Sort",
    answerFour: "XInsertion Sort",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 23,
    category: "Linked Lists",
    question: "Which of the following algos is not feasible to implement in a linked list?",
    answerOne: "XLinear Search",
    answerTwo: "CBinary Search",
    answerThree: "XMerge Sort",
    answerFour: "XInsertion Sort",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 24,
    category: "Linked Lists",
    question: "Which of the following can be done with linked lists?",
    answerOne: "XImplementation of Stacks and Queues",
    answerTwo: "XImplementation of Binary Trees",
    answerThree: "XImplementation of Data Structures that can simulate Dynamic Arrays",
    answerFour: "CAll of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 25,
    category: "Linked Lists",
    question: "What is the time complexity to insert an element to the front of a linked list?",
    answerOne: "XO(log n)",
    answerTwo: "XO(n)",
    answerThree: "CO(1)",
    answerFour: "XO(n+m)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 26,
    category: "Linked Lists",
    question: "What is the time complexity to insert an element to the rear of a linked list?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n+m)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 27,
    category: "Linked Lists",
    question: "Linked lists nodes can be implemented using what?",
    answerOne: "XStructs",
    answerTwo: "XClasses",
    answerThree: "CBoth",
    answerFour: "XNeither",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 28,
    category: "Linked Lists",
    question:
      "Which type of linked list stores the address of the head node in the next pointer of the last node?",
    answerOne: "XSingly",
    answerTwo: "XDoubly",
    answerThree: "XHashed List",
    answerFour: "CCircular",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 29,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    ListNode* solve(ListNode* head) {
      ListNode* prev = NULL;
      if(head == NULL) {
          return head;
      }
      if(head -> next == NULL) {
          return head;
      }
      ListNode* curr = head -> next;
      while(head != NULL) {
          head -> next = prev;
          prev = head;
          head = curr;
          if(curr != NULL) {
              curr = curr -> next;
          }
      }
      return prev;
  }
    `,
    answerOne: "XReturns the original linked list",
    answerTwo: "CReturns the linked list after reversing it",
    answerThree: "XReturns a linked list containing elements at odd indices only",
    answerFour: "XNone of the above",
    // answerFive: "X",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 30,
    category: "Linked Lists",
    question: "What is the time complexity to reverse a linked list?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n+m)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 31,
    category: "Linked Lists",
    question: "What is the time complexity to concatenate two linked lists?",
    answerOne: "XO(log n)",
    answerTwo: "XO(n)",
    answerThree: "XO(1)",
    answerFour: "CO(1) if we have the address of the last node of one of the lists",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 32,
    category: "Linked Lists",
    question: "Which type of linked list traversals can be performed in both directions?",
    answerOne: "XSingly",
    answerTwo: "CDoubly",
    answerThree: "XCircularly",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 33,
    category: "Linked Lists",
    question:
      "Which of the following algorithm is the optimal way to find the middle element of a linked list?",
    answerOne: "XFind the length, and then traverse to the length/2 node",
    answerTwo: "CFast and slow pointer method",
    answerThree: "XFind distance of all nodes and print middle nodes",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 34,
    category: "Linked Lists",
    question: "A linked list where none of the nodes contain a NULL pointer is?",
    answerOne: "XSingly",
    answerTwo: "XDoubly",
    answerThree: "CCircularly",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 35,
    category: "Linked Lists",
    question: "Which of the following statements are true?",
    answerOne: "XRandom access of elements in a linked list is not possible",
    answerTwo: "XArrays have better cache locality than linked lists",
    answerThree: "XThe size of linked lists is dynamic and can be changed as needed.",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 36,
    category: "Linked Lists",
    question:
      "What is the optimal complexity we can achieve when removing duplicates from an unsorted linked list?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 37,
    category: "Linked Lists",
    question:
      "What is the optimal complexity we can achieve when removing duplicates from a sorted linked list?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 38,
    category: "Linked Lists",
    question: "Which of the following sorting algorithms can be applied to linked lists?",
    answerOne: "XMerge Sort",
    answerTwo: "XInsertion Sort",
    answerThree: "XQuick Sort",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 39,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    ListNode* solve(ListNode* head, int x) {
      ListNode* front = head;
      int count = 1;
      while(front != NULL) {
        cout << front -> data << " " << head -> data << endl;
        if(count <= x) {
          front = front -> next;
        }
        else {
          head = head -> next;
          front = front -> next;
        }
        count++;
      }
      return head;
    }    
    `,
    answerOne: "XFind the xth node from beginning of a linked list",
    answerTwo: "CFind xth node from end of a linked list",
    answerThree: "XFind x-1th node from end of a linked list",
    answerFour: "XAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 40,
    category: "Linked Lists",
    question: "What will be the output of the following code snippet for 1->2->3->4->5?",
    codeSnippet: `
    void solve (ListNode* head) {
      while(head != NULL) {
      cout << head -> data << " ";
      head = head -> next;
    }
  
    }    
    `,
    answerOne: "X21345",
    answerTwo: "C12345",
    answerThree: "X54321",
    answerFour: "X23154",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 41,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    int solve (ListNode* list) {
      ListNode* fast = list;
    ListNode* slow = list;
    while(fast -> next != NULL && fast -> next -> next != NULL) {
      fast = fast -> next -> next;
      slow = slow -> next;
    }
    return slow -> data;
  
    }    
    `,
    answerOne: "CFind the middle element in the linked list",
    answerTwo: "XFind the last element in the linked list",
    answerThree: "XFind the first element in the linked list",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 42,
    category: "Linked Lists",
    question: "What does the following code snippet do?",
    codeSnippet: `
    void solve(ListNode* node) {
      node = node -> next;  
    }    
    `,
    answerOne: "XDeletes the given node from the linked list",
    answerTwo: "XDeletes head of the list",
    answerThree: "XDeletes the last node of the list",
    answerFour: "CNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 43,
    category: "Linked Lists",
    question:
      "The type of pointer used to point to the address of the next element in a linked list",
    answerOne: "XPointer to character",
    answerTwo: "XPointer to integer",
    answerThree: "CPointer to node",
    answerFour: "XAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 44,
    category: "Linked Lists",
    question: "Which is the most optimal to find an element at the kth position in a linked list?",
    answerOne: "XSingly Linked List",
    answerTwo: "XDoubly Linked List",
    answerThree: "XCircular Linked List",
    answerFour: "CArray implementation of the linked list",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 45,
    category: "Linked Lists",
    question: "What is the time complexity of adding 2 numbers as a linked list?",
    answerOne: "CO(max(n,m)) where n and m are sizes of the list",
    answerTwo: "XO(n+m)",
    answerThree: "XO(min(n,m))",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 1,
  },
  {
    questionNumber: 46,
    category: "Linked Lists",
    question: "Which of the following problems can be solved using two tortoise and hare pointers?",
    answerOne: "XDetecting cycle in a linked list",
    answerTwo: "XFinding the intersection of two linked lists",
    answerThree: "XFinding the middle element of a linked list",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 47,
    category: "Linked Lists",
    question: "Which of the following is similar about singly and doubly linked lists?",
    answerOne:
      "XBoth of them are not able to access the data at a random position in constant time",
    answerTwo:
      "XBoth of them can add a new node after a given node or at the beginning of a new list in O(1) time",
    answerThree: "XBoth of them can delete the first node in O(1) time. ",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 48,
    category: "Linked Lists",
    question: "Rotating a linked list by some places clockwise will take a TIME complexity of?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 49,
    category: "Linked Lists",
    question: "Rotating a linked list by some places clockwise will take a SPACE complexity of?",
    answerOne: "XO(log n)",
    answerTwo: "XO(n)",
    answerThree: "CO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 50,
    category: "Linked Lists",
    question: "What is the space complexity for deleting a linked list?",
    answerOne: "XO(log n)",
    answerTwo: "XO(n)",
    answerThree: "CO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 51,
    category: "Linked Lists",
    question: "What is the space complexity for storing a linked list?",
    answerOne: "XO(log n)",
    answerTwo: "CO(n)",
    answerThree: "XO(1)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 52,
    category: "Linked Lists",
    question: "Which of the following operations takes O(1) time?",
    answerOne: "CInsert element at the start of linked list",
    answerTwo: "XInsert element at end of linked list",
    answerThree: "XFind length of linked list",
    answerFour: "XNone of the above",
    // answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 53,
    category: "Linked Lists",
    question: "What information stored by linked lists is used to implement binary trees?",
    answerOne: "XValue of current node",
    answerTwo: "XPointer to left child",
    answerThree: "XPointer to right child",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 0,
  },
  {
    questionNumber: 54,
    category: "Linked Lists",
    question: "Which of the following sorting algorithms is preferred to sort a linked list?",
    answerOne: "CMerge Sort",
    answerTwo: "XQuick Sort",
    answerThree: "XInsertion",
    answerFour: "XAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 1,
    timesIncorrect: 2,
  },
  {
    questionNumber: 55,
    category: "JavaScript",
    question: "What is the use of 'this' keyword in JavaScript?",
    answerOne: "CIt refers to the current instance of the object",
    answerTwo: "XIt refers to the previous instance of the object",
    answerThree: "XIt refers to the global object",
    answerFour: "XAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 56,
    category: "JavaScript",
    question:
      "Which method in an Array object is used to add and/or remove elements from an array?",
    answerOne: "Xfilter()",
    answerTwo: "Xmap()",
    answerThree: "Csplice()",
    answerFour: "Xreduce()",
    answerFive: "XindexOf()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 57,
    category: "Data Structures",
    question: "What data structure uses a Last In First Out (LIFO) method?",
    answerOne: "XQueue",
    answerTwo: "XLinked List",
    answerThree: "XArray",
    answerFour: "CStack",
    answerFive: "XBinary Tree",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 58,
    category: "Data Structures",
    question:
      "In binary search trees, where does a node with a value less than the parent node go?",
    answerOne: "XTo the right",
    answerTwo: "XTo the root",
    answerThree: "CTo the left",
    answerFour: "XNone of the above",
    answerFive: "XAll of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 59,
    category: "Algorithms",
    question:
      "What is the time complexity of the quicksort algorithm in the average case scenario?",
    answerOne: "XO(n)",
    answerTwo: "XO(1)",
    answerThree: "CO(nlogn)",
    answerFour: "XO(n^2)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 60,
    category: "Algorithms",
    question:
      "In the Dijkstra's algorithm, which data structure is typically used to store the vertices?",
    answerOne: "XArray",
    answerTwo: "XLinked List",
    answerThree: "XStack",
    answerFour: "CHeap",
    answerFive: "XHash Table",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 61,
    category: "JavaScript",
    question:
      "What type of JavaScript variable is mutable and allows properties to be added and removed?",
    answerOne: "CObject",
    answerTwo: "XNumber",
    answerThree: "XString",
    answerFour: "XBoolean",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 62,
    category: "JavaScript",
    question: "Which method is used to remove the last element from a JavaScript array?",
    answerOne: "Xshift()",
    answerTwo: "Cpop()",
    answerThree: "Xpush()",
    answerFour: "Xunshift()",
    answerFive: "Xsplice()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 63,
    category: "Data Structures",
    question: "In hash tables, what technique helps handle collisions?",
    answerOne: "XBinary Search",
    answerTwo: "XDynamic Programming",
    answerThree: "CDouble Hashing",
    answerFour: "XRadix Sort",
    answerFive: "XAll of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 64,
    category: "Algorithms",
    question: "Which of the following is not a type of sorting algorithm?",
    answerOne: "XBubble Sort",
    answerTwo: "CPrim's Algorithm",
    answerThree: "XHeap Sort",
    answerFour: "XQuick Sort",
    answerFive: "XInsertion Sort",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 65,
    category: "Binary Search Trees",
    question: "What is the time complexity of searching for an element in a binary search tree?",
    answerOne: "XO(n^2)",
    answerTwo: "CO(logn)",
    answerThree: "XO(n)",
    answerFour: "XO(1)",
    answerFive: "XO(nlogn)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 66,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function isBST(node, min = null, max = null) {
      if (node === null) {
          return true;
      }
      if ((min !== null && node.val <= min) || (max !== null && node.val > max)) {
          return false;
      }
      return isBST(node.left, min, node.val) && isBST(node.right, node.val, max);
    }
    `,
    answerOne: "XReturns the sum of all nodes in a binary search tree",
    answerTwo: "XReturns a binary search tree after deleting a specific node",
    answerThree: "CChecks if a given binary tree is a binary search tree",
    answerFour: "XFinds the smallest element in a binary search tree",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 67,
    category: "Binary Search Trees",
    question: "In a binary search tree, which traversal method results in a sorted order of nodes?",
    answerOne: "XPreorder traversal",
    answerTwo: "XPostorder traversal",
    answerThree: "CInorder traversal",
    answerFour: "XLevel-order traversal",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 68,
    category: "Binary Search Trees",
    question:
      "What operation would give a worst-case time complexity of O(n) in a binary search tree?",
    answerOne: "XInsertion",
    answerTwo: "XDeletion",
    answerThree: "XSearch",
    answerFour: "CAll of the above",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 69,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function findMin(root) {
      let current = root;
      while (current.left !== null) {
          current = current.left;
      }
      return current.key;
    }
    `,
    answerOne: "CReturns the minimum element in a binary search tree",
    answerTwo: "XReturns the maximum element in a binary search tree",
    answerThree: "XReturns the sum of all elements in a binary search tree",
    answerFour: "XReturns the height of the binary search tree",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 70,
    category: "Binary Search Trees",
    question:
      "In a binary search tree, the left child is _______ than the parent, and the right child is _______ than the parent.",
    answerOne: "Xlarger, smaller",
    answerTwo: "Csmaller, larger",
    answerThree: "Xlarger, larger",
    answerFour: "Xsmaller, smaller",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 71,
    category: "Binary Trees",
    question: "What is the maximum number of nodes at level 'l' in a binary tree?",
    answerOne: "Xl",
    answerTwo: "Xl^2",
    answerThree: "XL^2",
    answerFour: "Xl!",
    answerFive: "CNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 72,
    category: "Binary Trees",
    question: "What is the time complexity of in-order tree traversal in a binary tree?",
    answerOne: "XO(logn)",
    answerTwo: "XO(n^2)",
    answerThree: "CO(n)",
    answerFour: "XO(1)",
    answerFive: "XO(nlogn)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 73,
    category: "Binary Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function height(root) {
      if (root === null) {
          return -1;
      } else {
          return Math.max(height(root.left), height(root.right)) + 1;
      }
    }
    `,
    answerOne: "XFinds the sum of all elements in the binary tree",
    answerTwo: "CFinds the height of the binary tree",
    answerThree: "XFinds the largest element in the binary tree",
    answerFour: "XChecks if the binary tree is balanced",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 74,
    category: "Binary Search Trees",
    question:
      "What is the time complexity of the worst case for insert operation in a Binary Search Tree?",
    answerOne: "XO(1)",
    answerTwo: "XO(logn)",
    answerThree: "XO(nlogn)",
    answerFour: "CO(n)",
    answerFive: "XO(n^2)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 75,
    category: "Binary Search Trees",
    question: "What does the following JavaScript code do?",
    codeSnippet: `
    function isBalanced(root) {
      if (root === null) {
          return true;
      }
      const leftHeight = height(root.left);
      const rightHeight = height(root.right);
      return (
        Math.abs(leftHeight - rightHeight) <= 1 &&
        isBalanced(root.left) &&
        isBalanced(root.right)
      );
    }
    `,
    answerOne: "CChecks if the binary tree is balanced",
    answerTwo: "XReturns the height of the binary tree",
    answerThree: "XChecks if the binary tree is a binary search tree",
    answerFour: "XFinds the largest element in the binary tree",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 76,
    category: "Binary Search Trees",
    question: "What does 'balanced' mean in the context of Binary Search Trees?",
    answerOne: "XAll nodes have two children",
    answerTwo: "XThe tree is fully filled",
    answerThree: "XThere are no duplicate nodes",
    answerFour: "CThe height of the left and right subtrees of every node differ by no more than 1",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 77,
    category: "Binary Trees",
    question: "What type of binary tree is used for Huffman coding?",
    answerOne: "XBinary Search Tree",
    answerTwo: "XB+ Tree",
    answerThree: "CBinary Heap",
    answerFour: "XAVL Tree",
    answerFive: "XRed-Black Tree",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 78,
    category: "Binary Search Trees",
    question:
      "In the context of Binary Search Trees, what does the term 'in-order predecessor' mean?",
    answerOne: "XThe node with the highest value",
    answerTwo: "XThe parent node",
    answerThree: "CThe node with the next lower value",
    answerFour: "XThe left child of a node",
    answerFive: "XThe right child of a node",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 79,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let arr = [10, 20, 30, 40, 50];
    console.log(arr.length);
    `,
    answerOne: "C5",
    answerTwo: "X50",
    answerThree: "X10",
    answerFour: "X4",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 80,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let set = new Set();
    set.add(1);
    set.add(2);
    set.add(3);
    console.log(set.has(2));
    `,
    answerOne: "XFalse",
    answerTwo: "CTrue",
    answerThree: "X3",
    answerFour: "X2",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 81,
    category: "JavaScript Data Structures",
    question: "What is the time complexity of adding an element to a JavaScript array?",
    answerOne: "CO(1)",
    answerTwo: "XO(n)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 82,
    category: "JavaScript Data Structures",
    question: "What data structure is ideally suited for a first-in-first-out (FIFO) process?",
    answerOne: "XSet",
    answerTwo: "XArray",
    answerThree: "XStack",
    answerFour: "CQueue",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 83,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let map = new Map();
    map.set('name', 'John');
    console.log(map.get('name'));
    `,
    answerOne: "Xname",
    answerTwo: "Xundefined",
    answerThree: "CJohn",
    answerFour: "Xnull",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 84,
    category: "JavaScript Data Structures",
    question: "Which method removes the last element from an array and returns that element?",
    answerOne: "Xshift()",
    answerTwo: "Xunshift()",
    answerThree: "Cpop()",
    answerFour: "Xpush()",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 85,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let arr = [1, 2, 3, 4, 5];
    arr.splice(2, 1);
    console.log(arr);
    `,
    answerOne: "X[1, 2, 3, 4, 5]",
    answerTwo: "C[1, 2, 4, 5]",
    answerThree: "X[1, 3, 4, 5]",
    answerFour: "X[2, 3, 4, 5]",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 86,
    category: "JavaScript Data Structures",
    question: "Which of the following is not a built-in JavaScript data structure?",
    answerOne: "XLinked List",
    answerTwo: "CHeap",
    answerThree: "XSet",
    answerFour: "XMap",
    answerFive: "XArray",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 87,
    category: "JavaScript Data Structures",
    question: "What will be the output of the following JavaScript code?",
    codeSnippet: `
    let stack = [];
    stack.push(1);
    stack.push(2);
    console.log(stack.pop());
    `,
    answerOne: "X1",
    answerTwo: "C2",
    answerThree: "Xundefined",
    answerFour: "Xnull",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 88,
    category: "JavaScript Data Structures",
    question: "What is the time complexity to access an element in a JavaScript array by index?",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 89,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    list = [1, 2, 3, 4, 5]
    print(len(list))
    `,
    answerOne: "C5",
    answerTwo: "X1",
    answerThree: "X2",
    answerFour: "X3",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 90,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'Name': 'Zara', 'Age': 7}
    print("Value : %s" %  dict.get('Age'))
    `,
    answerOne: "XName",
    answerTwo: "C7",
    answerThree: "XZara",
    answerFour: "XNone",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 91,
    category: "Python Data Structures",
    question: "What is the time complexity of appending an element to a Python list?",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 92,
    category: "Python Data Structures",
    question: "What data structure is ideally suited for a first-in-first-out (FIFO) process?",
    answerOne: "XList",
    answerTwo: "XDict",
    answerThree: "XStack",
    answerFour: "CQueue",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 93,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    stack = [3, 4, 5]
    stack.append(6)
    stack.append(7)
    print(stack)
    `,
    answerOne: "X[3, 4, 5]",
    answerTwo: "C[3, 4, 5, 6, 7]",
    answerThree: "X[6, 7]",
    answerFour: "X[7, 6, 5, 4, 3]",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 94,
    category: "Python Data Structures",
    question: "Which method removes the last element from a list and returns that element?",
    answerOne: "Xshift()",
    answerTwo: "Xunshift()",
    answerThree: "Cpop()",
    answerFour: "Xpush()",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 95,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    queue = [3, 4, 5]
    queue.append(6)
    queue.append(7)
    queue.pop(0)
    print(queue)
    `,
    answerOne: "X[3, 4, 5]",
    answerTwo: "X[3, 4, 5, 6, 7]",
    answerThree: "C[4, 5, 6, 7]",
    answerFour: "X[7, 6, 5, 4]",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 96,
    category: "Python Data Structures",
    question: "Which of the following is not a built-in Python data structure?",
    answerOne: "XLinked List",
    answerTwo: "CHeap",
    answerThree: "XSet",
    answerFour: "XDict",
    answerFive: "XList",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 97,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    stack = [3, 4, 5]
    stack.append(6)
    stack.append(7)
    print(stack.pop())
    `,
    answerOne: "X3",
    answerTwo: "C7",
    answerThree: "X5",
    answerFour: "XNone",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 98,
    category: "Python Data Structures",
    question: "What is the time complexity to access an element in a Python list by index?",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 99,
    category: "Python Data Structures",
    question: "How do you define an empty set in Python?",
    answerOne: "Cset()",
    answerTwo: "X{}",
    answerThree: "XSet()",
    answerFour: "X[]",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 100,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'a': 1, 'b': 2, 'c': 3}
    print(len(dict))
    `,
    answerOne: "X2",
    answerTwo: "C3",
    answerThree: "X1",
    answerFour: "X0",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 101,
    category: "Python Data Structures",
    question:
      "What is the time complexity of checking whether an element is present in a Python set?",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 102,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {'a': 1, 'b': 2, 'c': 3}
    print('b' in dict)
    `,
    answerOne: "XFalse",
    answerTwo: "CTrue",
    answerThree: "XNone",
    answerFour: "X3",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 103,
    category: "Python Data Structures",
    question: "Which of the following Python data structures is ordered?",
    answerOne: "XSet",
    answerTwo: "XDictionary",
    answerThree: "XBoth of the above",
    answerFour: "CNone of the above",
    answerFive: "XList",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 104,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    tup = ('physics', 'chemistry', 1997, 2000)
    print(len(tup))
    `,
    answerOne: "X3",
    answerTwo: "X1",
    answerThree: "XNone",
    answerFour: "C4",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 105,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    tup1 = (50,)
    print(type(tup1))
    `,
    answerOne: "XInt",
    answerTwo: "C<class 'tuple'>",
    answerThree: "X<class 'list'>",
    answerFour: "X<class 'str'>",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 106,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    dict = {['Name']: 'Zara', 'Age': 7}
    print("Value : %s" %  dict.get('Name'))
    `,
    answerOne: "XZara",
    answerTwo: "XNone",
    answerThree: "XAge",
    answerFour: "X7",
    answerFive: "CTypeError: unhashable type: 'list'",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 107,
    category: "Python Data Structures",
    question: "What will be the output of the following Python code?",
    codeSnippet: `
    list1 = ['physics', 'chemistry', 1997, 2000]
    list1.remove(1997)
    print(list1)
    `,
    answerOne: "C['physics', 'chemistry', 2000]",
    answerTwo: "X['physics', 'chemistry']",
    answerThree: "X['physics', 'chemistry', 1997]",
    answerFour: "X['physics', 'chemistry', 1997, 2000]",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 108,
    category: "Python Data Structures",
    question: "What is the time complexity to access an element in a Python tuple by index?",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(nlogn)",
    answerFour: "XO(logn)",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 109,
    category: "Linked Lists",
    question: "What does this code snippet accomplish?",
    codeSnippet: `
    const fakeFunctionName = function(head) {
      let prev = null;
      let current = head;
      let next = null;
  
      while(current){
          next = current.next;
          current.next = prev;
          prev = current;
          current = next;
      }
      return prev
  };
    `,
    answerOne: "XFinds middle node",
    answerTwo: "XFinds list length",
    answerThree: "CReverses Linked List",
    answerFour: "XAdds new nodes",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 110,
    category: "Linked Lists",
    question: "What does this code snippet accomplish?",
    codeSnippet: `
    def fakeFunctionName (self, head):
      prev = None
      current = head
      after = None

      while(current):
          after = current.next
          current.next = prev
          prev = current
          current = after
      
      return prev
    `,
    answerOne: "XFinds middle node",
    answerTwo: "XFinds list length",
    answerThree: "CReverses Linked List",
    answerFour: "XAdds new nodes",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 111,
    category: "JavaScript Algorithms",
    question: "_______ is a JavaScript method used to combine two or more arrays.",
    answerOne: "XArray.join()",
    answerTwo: "XArray.splice()",
    answerThree: "CArray.concat()",
    answerFour: "XArray.merge()",
    answerFive: "XArray.combine()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 112,
    category: "JavaScript Linked Lists",
    question:
      "In JavaScript, _______ is not a built-in data structure, but can be implemented using objects and pointers.",
    answerOne: "XArray",
    answerTwo: "XStack",
    answerThree: "XQueue",
    answerFour: "CLinked List",
    answerFive: "XSet",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 113,
    category: "JavaScript Algorithms",
    question:
      "The _______ method is used to find the index of the first occurrence of a specified element in an array.",
    answerOne: "CArray.indexOf()",
    answerTwo: "XArray.search()",
    answerThree: "XArray.find()",
    answerFour: "XArray.positionOf()",
    answerFive: "XArray.locate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 114,
    category: "JavaScript Binary Trees",
    question: "In a binary search tree (BST), all nodes to the left of a node have values _______.",
    answerOne: "Xgreater than the node's value",
    answerTwo: "Xequal to the node's value",
    answerThree: "Xnot related to the node's value",
    answerFour: "Cless than the node's value",
    answerFive: "Xgreater than or equal to the node's value",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 115,
    category: "JavaScript Graphs",
    question: "_______ is a path finding algorithm that uses a heuristic to guide its search.",
    answerOne: "CA*",
    answerTwo: "XBreadth-First Search",
    answerThree: "XDepth-First Search",
    answerFour: "XDijkstra's Algorithm",
    answerFive: "XBinary Search",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 116,
    category: "JavaScript Algorithms",
    question:
      "The JavaScript _______ method is used to test whether at least one element in the array passes the test implemented by the provided function.",
    answerOne: "Xevery()",
    answerTwo: "Xfilter()",
    answerThree: "Csome()",
    answerFour: "Xall()",
    answerFive: "Xfind()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 117,
    category: "JavaScript Binary Trees",
    question:
      "In a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far _______ as possible.",
    answerOne: "Xright",
    answerTwo: "Xup",
    answerThree: "Cleft",
    answerFour: "Xdown",
    answerFive: "Xmiddle",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 118,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method creates a new array populated with the results of calling a provided function on every element in the calling array.",
    answerOne: "XforEach()",
    answerTwo: "Xfilter()",
    answerThree: "Xreduce()",
    answerFour: "Cmap()",
    answerFive: "Xeach()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 119,
    category: "JavaScript Graphs",
    question: "_______ is a method to traverse every vertex of a graph or tree data structure.",
    answerOne: "CBreadth-First Search",
    answerTwo: "XDepth-Last Search",
    answerThree: "XBreadth-Last Search",
    answerFour: "XDepth-Only Search",
    answerFive: "XShallow Search",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 120,
    category: "JavaScript Linked Lists",
    question:
      "When implementing a linked list in JavaScript, each node typically has properties for _______.",
    answerOne: "Xnext and value",
    answerTwo: "Cvalue and next",
    answerThree: "Xprev and value",
    answerFour: "Xnext and key",
    answerFive: "Xkey and value",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 121,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, _______ is a function that creates a new array with the results of calling a provided function on every element in the calling array.",
    answerOne: "XforEach()",
    answerTwo: "Cmap()",
    answerThree: "Xeach()",
    answerFour: "Xfilter()",
    answerFive: "Xreduce()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 122,
    category: "JavaScript Graphs",
    question:
      "A graph data structure that uses a parent-child concept, but without cycles, is called a _______.",
    answerOne: "XCycle Graph",
    answerTwo: "XLinked Graph",
    answerThree: "XBi-Directional Graph",
    answerFour: "CTree",
    answerFive: "XRooted Graph",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 123,
    category: "JavaScript Algorithms",
    question: "_______ is a JavaScript array method that reduces the array to a single value.",
    answerOne: "XreduceRight()",
    answerTwo: "Xconcat()",
    answerThree: "Xflatten()",
    answerFour: "Creduce()",
    answerFive: "Xmerge()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 124,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.",
    answerOne: "Xmerge()",
    answerTwo: "Xcombine()",
    answerThree: "Xflatten()",
    answerFour: "Cflat()",
    answerFive: "Xreduce()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 125,
    category: "JavaScript Binary Trees",
    question:
      "In JavaScript, a binary tree can be traversed in _______ order, where each node is processed between subtrees.",
    answerOne: "Xpost-order",
    answerTwo: "Xpre-order",
    answerThree: "Cin-order",
    answerFour: "Xbreadth-first",
    answerFive: "Xdepth-first",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 126,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to determine whether a given element exists in an array, returning a boolean.",
    answerOne: "Xhas()",
    answerTwo: "Xexist()",
    answerThree: "Cincludes()",
    answerFour: "Xcontains()",
    answerFive: "Xwithin()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 127,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to combine the elements of an array into a string, you can use the _______ method.",
    answerOne: "Xcollect()",
    answerTwo: "Xgather()",
    answerThree: "Xconcat()",
    answerFour: "Cjoin()",
    answerFive: "Xgroup()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 128,
    category: "JavaScript Binary Trees",
    question: "In a binary tree, a node that has no children is known as a _______.",
    answerOne: "Xroot",
    answerTwo: "Cleaf",
    answerThree: "Xbranch",
    answerFour: "Xtwig",
    answerFive: "Xstem",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 129,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to reverse the order of elements in an array, you can use the _______ method.",
    answerOne: "Xturn()",
    answerTwo: "Xswap()",
    answerThree: "Xinvert()",
    answerFour: "Creverse()",
    answerFive: "Xflip()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 130,
    category: "JavaScript Linked Lists",
    question: "In a doubly linked list, each node has a reference to the _______.",
    answerOne: "Xnext node and previous root",
    answerTwo: "Xprevious node and next root",
    answerThree: "Cnext node and previous node",
    answerFour: "Xnext root and previous root",
    answerFive: "Xprevious leaf and next leaf",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 131,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to modify the contents of an array by removing or replacing existing elements and/or adding new elements in place.",
    answerOne: "Xmodify()",
    answerTwo: "Csplice()",
    answerThree: "Xmutate()",
    answerFour: "Xshift()",
    answerFive: "Xedit()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 132,
    category: "JavaScript Algorithms",
    question:
      "The time complexity of the quicksort algorithm in the worst case scenario is _______.",
    answerOne: "XO(n)",
    answerTwo: "XO(log n)",
    answerThree: "XO(n log n)",
    answerFour: "CO(n^2)",
    answerFive: "XO(n!)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 133,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ array method can be used to remove the first item from an array.",
    answerOne: "Xremove()",
    answerTwo: "Cshift()",
    answerThree: "Xpop()",
    answerFour: "Xextract()",
    answerFive: "Xdelete()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 134,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to copy an array, you can use the _______ method, which creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.",
    answerOne: "Xsplice()",
    answerTwo: "Cslice()",
    answerThree: "Xcut()",
    answerFour: "Xcopy()",
    answerFive: "Xduplicate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 135,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to merge two or more objects into a new object without modifying the original objects, you can use the _______ method.",
    answerOne: "Xjoin()",
    answerTwo: "Xconcat()",
    answerThree: "CObject.assign()",
    answerFour: "XObject.merge()",
    answerFive: "XObject.combine()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 136,
    category: "JavaScript Algorithms",
    question:
      "The time complexity of accessing an item in a JavaScript object by its key is _______.",
    answerOne: "XO(n)",
    answerTwo: "CO(1)",
    answerThree: "XO(n log n)",
    answerFour: "XO(n^2)",
    answerFive: "XO(log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 137,
    category: "JavaScript Algorithms",
    question:
      "The _______ method is used in JavaScript to execute a function once for each array element, and returns a new array with the modified items.",
    answerOne: "Xchange()",
    answerTwo: "Cmap()",
    answerThree: "Xtransform()",
    answerFour: "Xmodify()",
    answerFive: "Xiterate()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 138,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the time complexity of searching for an item in an unsorted array is _______.",
    answerOne: "XO(log n)",
    answerTwo: "XO(1)",
    answerThree: "CO(n)",
    answerFour: "XO(n^2)",
    answerFive: "XO(n log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 139,
    category: "JavaScript Algorithms",
    question: "In JavaScript, the _______ method can be used to add items to the end of an array.",
    answerOne: "Cpush()",
    answerTwo: "Xappend()",
    answerThree: "Xadd()",
    answerFour: "Xinsert()",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 140,
    category: "JavaScript Algorithms",
    question: "In JavaScript, the _______ method can be used to sort an array.",
    answerOne: "Xorder()",
    answerTwo: "Xarrange()",
    answerThree: "Csort()",
    answerFour: "Xsequence()",
    answerFive: "Xrank()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 141,
    category: "JavaScript Data Structures",
    question: "In a JavaScript object, keys are always of type _______.",
    answerOne: "Xnumber",
    answerTwo: "Xobject",
    answerThree: "Xboolean",
    answerFour: "Cstring",
    answerFive: "Xarray",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 142,
    category: "JavaScript Data Structures",
    question: "In a JavaScript Set object, each value must be _______.",
    answerOne: "Xa string",
    answerTwo: "Xa number",
    answerThree: "Xan array",
    answerFour: "Can object",
    answerFive: "Cunique",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 143,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, to return the first index at which a given element can be found in the array, you can use the _______ method.",
    answerOne: "Xfirst()",
    answerTwo: "Xlocate()",
    answerThree: "Xposition()",
    answerFour: "CindexOf()",
    answerFive: "XindexAt()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 144,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method returns a new string with some or all matches of a pattern replaced by a replacement.",
    answerOne: "Xchange()",
    answerTwo: "Xswitch()",
    answerThree: "Xalter()",
    answerFour: "Creplace()",
    answerFive: "Xswap()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 145,
    category: "JavaScript Algorithms",
    question:
      "In JavaScript, the _______ method executes a reducer function (that you provide) on each element of the array, resulting in a single output value.",
    answerOne: "Xcompress()",
    answerTwo: "Xcombine()",
    answerThree: "Xmingle()",
    answerFour: "Creduce()",
    answerFive: "Xjoin()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 146,
    category: "Python Data Structures",
    question: "In Python, to add an item to the end of the list, you can use the _______ method.",
    answerOne: "Xpush()",
    answerTwo: "Cappend()",
    answerThree: "Xinsert()",
    answerFour: "Xadd()",
    answerFive: "Xattach()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 147,
    category: "Python Data Structures",
    question:
      "In Python, the _______ data structure is a collection which is unordered, changeable and indexed. It has no duplicate elements.",
    answerOne: "Xtuple",
    answerTwo: "Xlist",
    answerThree: "Xarray",
    answerFour: "Cset",
    answerFive: "Xdictionary",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 148,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return the number of times a specified value appears in the string.",
    answerOne: "Xappear()",
    answerTwo: "Ccount()",
    answerThree: "Xnumber()",
    answerFour: "Xtotal()",
    answerFive: "Xquantity()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 149,
    category: "Python Data Structures",
    question:
      "In Python, a _______ is a collection which is ordered and unchangeable. It allows duplicate members.",
    answerOne: "Ctuple",
    answerTwo: "Xset",
    answerThree: "Xdictionary",
    answerFour: "Xlist",
    answerFive: "Xarray",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 150,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return a string which is a concatenation of all strings in an iterable.",
    answerOne: "Xmerge()",
    answerTwo: "Xattach()",
    answerThree: "Cjoin()",
    answerFour: "Xcombine()",
    answerFive: "Xlink()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 151,
    category: "Python Algorithms",
    question:
      "In Python, the time complexity of searching for an item in a sorted list using binary search is _______.",
    answerOne: "XO(n)",
    answerTwo: "XO(1)",
    answerThree: "XO(n^2)",
    answerFour: "CO(log n)",
    answerFive: "XO(n log n)",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 152,
    category: "Python Data Structures",
    question:
      "In Python, the _______ data structure is a collection which is unordered, changeable and indexed. It does not allow duplicate values.",
    answerOne: "Xset",
    answerTwo: "Xtuple",
    answerThree: "Cdictionary",
    answerFour: "Xlist",
    answerFive: "Xarray",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 153,
    category: "Python Data Structures",
    question:
      "In Python, a _______ is a collection which is ordered and changeable. It allows duplicate members.",
    answerOne: "Xtuple",
    answerTwo: "Clist",
    answerThree: "Xdictionary",
    answerFour: "Xset",
    answerFive: "Xarray",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 154,
    category: "Python Algorithms",
    question:
      "In Python, the _______ method returns a string with a certain number of leading characters removed. The leading characters to be removed are specified as parameters.",
    answerOne: "Xremove()",
    answerTwo: "Xstrip()",
    answerThree: "Clstrip()",
    answerFour: "Xdelete()",
    answerFive: "Xcut()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 155,
    category: "Python Algorithms",
    question:
      "In Python, the _______ function can be used to return the length (the number of items) of an object.",
    answerOne: "Clen()",
    answerTwo: "Xsize()",
    answerThree: "Xquantity()",
    answerFour: "Xamount()",
    answerFive: "Xtotal()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },

  {
    questionNumber: 156,
    category: "React and React-Redux",
    question:
      "In React 18, ________ lets you prepare multiple versions of the UI in memory and switch between them without causing a re-render.",
    answerOne: "XComponent swapping",
    answerTwo: "CReact Server Components",
    answerThree: "XReact Virtualization",
    answerFour: "XReact State Transition",
    answerFive: "XReact Memory Buffer",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 157,
    category: "React and React-Redux",
    question:
      "The _______ method is used in React and React-Redux to wrap a root and its descendants so updates to them can be batched together.",
    answerOne: "XbatchUpdate()",
    answerTwo: "CcreateRoot()",
    answerThree: "Xroot()",
    answerFour: "XrootBatch()",
    answerFive: "XcreateBatch()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 158,
    category: "React and React-Redux",
    question:
      "React 18 introduces _______ that helps to automatically batch multiple state updates into a single render pass.",
    answerOne: "XRender Optimization",
    answerTwo: "XSingle Pass Rendering",
    answerThree: "Cautomatic batching",
    answerFour: "XState Aggregation",
    answerFive: "XBatch State Update",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 159,
    category: "React and React-Redux",
    question:
      "React 18 introduced a new API called ________ that allows developers to suspend and resume rendering on a per-component basis.",
    answerOne: "XrenderControl()",
    answerTwo: "Csuspense",
    answerThree: "XrenderPause()",
    answerFour: "XrenderSuspense()",
    answerFive: "Xsuspend()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 160,
    category: "React and React-Redux",
    question:
      "In React and React-Redux, _______ can be used for controlling the visual loading sequence of a component.",
    answerOne: "XcomponentLoading()",
    answerTwo: "XloadingControl()",
    answerThree: "CstartTransition",
    answerFour: "XcomponentSequence()",
    answerFive: "XstartLoading()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 161,
    category: "React and React-Redux",
    question:
      "The _______ API in React and React-Redux is used to inform React about a state update that can be interrupted by other more important updates.",
    answerOne: "XintermediateState()",
    answerTwo: "XinterruptibleUpdate()",
    answerThree: "CstartTransition()",
    answerFour: "XprioritizeUpdate()",
    answerFive: "XstateTransition()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 162,
    category: "React and React-Redux",
    question:
      "In React and React-Redux, _______ is a new type of component that can be rendered on the server and then sent to the client as HTML.",
    answerOne: "XHTML Component",
    answerTwo: "CServer Component",
    answerThree: "XTransfer Component",
    answerFour: "XServer HTML Component",
    answerFive: "XRemote Component",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 163,
    category: "React and React-Redux",
    question:
      "In React 18, _______ is the way to create a root for a React tree, used as a replacement for `ReactDOM.render()`.",
    answerOne: "XReact.create()",
    answerTwo: "XReact.initialize()",
    answerThree: "CReactDOM.createRoot()",
    answerFour: "XReact.root()",
    answerFive: "XReactDOM.initializeRoot()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 164,
    category: "React and React-Redux",
    question:
      "React 18 introduces a built-in _______ API that allows React to avoid unnecessary layout computations and browser renders.",
    answerOne: "XComputation Manager",
    answerTwo: "Cconcurrent rendering",
    answerThree: "XRender Optimizer",
    answerFour: "XLayout Manager",
    answerFive: "XBrowser Renderer",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 165,
    category: "React and React-Redux",
    question:
      "React 18's _______ enables select parts of your UI to update and render immediately, while others update later.",
    answerOne: "XRender Prioritization",
    answerTwo: "XSelective Rendering",
    answerThree: "XUpdate Prioritization",
    answerFour: "Cselective hydration",
    answerFive: "XUI Segmenting",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 166,
    category: "React and React-Redux",
    question: "In React 18, _______ let you split a rendering task into multiple smaller tasks.",
    answerOne: "CReact.startTransition()",
    answerTwo: "XReact.split()",
    answerThree: "XReact.fragment()",
    answerFour: "XReact.parts()",
    answerFive: "XReact.task()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 167,
    category: "React and React-Redux",
    question:
      "React 18 introduced the _______ method that enables you to block a transition from finishing until some condition is met.",
    answerOne: "XblockTransition()",
    answerTwo: "XholdTransition()",
    answerThree: "XsuspendTransition()",
    answerFour: "CuseTransition()",
    answerFive: "XdelayTransition()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 168,
    category: "React and React-Redux",
    question:
      "React 18's _______ mechanism allows users to interact with the page during a large update, providing a smoother user experience.",
    answerOne: "CInterruptible Rendering",
    answerTwo: "XUI Decoupling",
    answerThree: "XUser Interactivity",
    answerFour: "XUpdate Pausing",
    answerFive: "XRender Throttling",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 169,
    category: "React and React-Redux",
    question:
      "In React 18, _______ is a feature that allows you to defer rendering for certain parts of your application to improve perceived performance.",
    answerOne: "XDefer Rendering",
    answerTwo: "XDelay Rendering",
    answerThree: "Csuspense",
    answerFour: "XPostpone Rendering",
    answerFive: "XRender Later",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 171,
    category: "React and React-Redux",
    question:
      "In React 17, the new JSX Transform eliminated the need for ________ in your JSX code.",
    answerOne: "CReact.createElement()",
    answerTwo: "XReact.JSX()",
    answerThree: "XReact.transformJSX()",
    answerFour: "XReact.compileJSX()",
    answerFive: "XReact.generateJS()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 172,
    category: "React and React-Redux",
    question:
      "In React-Redux, _______ is a function that allows you to extract data from the Redux store state.",
    answerOne: "XuseData()",
    answerTwo: "CuseSelector()",
    answerThree: "XuseState()",
    answerFour: "XuseStore()",
    answerFive: "XuseExtract()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 173,
    category: "React and React-Redux",
    question: "In React-Redux, the _______ hook dispatches actions to the store.",
    answerOne: "XuseDispatchAction()",
    answerTwo: "CuseDispatch()",
    answerThree: "XuseAction()",
    answerFour: "XuseStoreDispatch()",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 174,
    category: "React and React-Redux",
    question:
      "In React 18, _______ lets you prepare a new version of a component in memory, which can replace the current one on screen when ready.",
    answerOne: "XusePrepare()",
    answerTwo: "CuseTransition()",
    answerThree: "XuseVersion()",
    answerFour: "XuseReplace()",
    answerFive: "XuseComponent()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 175,
    category: "React and React-Redux",
    question:
      "In React-Redux, _______ is a higher order function that connects a React component to the Redux store.",
    answerOne: "Xlink()",
    answerTwo: "XconnectRedux()",
    answerThree: "Cconnect()",
    answerFour: "XstoreLink()",
    answerFive: "XconnectStore()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 176,
    category: "React and React-Redux",
    question:
      "In React 18, the _______ API allows you to start a transition, providing a way to coordinate changes to your components with different levels of priority.",
    answerOne: "XuseChange()",
    answerTwo: "XuseShift()",
    answerThree: "CstartTransition()",
    answerFour: "XuseTransition()",
    answerFive: "XstartChange()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 177,
    category: "React and React-Redux",
    question:
      "In React-Redux, the _______ is a function of the store that allows you to dispatch actions.",
    answerOne: "Xaction()",
    answerTwo: "Cdispatch()",
    answerThree: "Xsend()",
    answerFour: "XpushAction()",
    answerFive: "XNone of the above",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 178,
    category: "React and React-Redux",
    question:
      "In React, _______ are used to split components into non-visual logic and visual parts.",
    answerOne: "XDividers",
    answerTwo: "XDecomposers",
    answerThree: "CHooks",
    answerFour: "XBreakers",
    answerFive: "CSplitting Tools",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 179,
    category: "React and React-Redux",
    question:
      "In React, _______ is a concept that allows a component to maintain internal state data, independently managing it itself.",
    answerOne: "XInternal Data Management",
    answerTwo: "CState",
    answerThree: "XComponent Data",
    answerFour: "XSelf-Containment",
    answerFive: "XData Independence",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 180,
    category: "React and React-Redux",
    question: "In React-Redux, the _______ is the central repository of all state data.",
    answerOne: "XData Center",
    answerTwo: "CStore",
    answerThree: "XState Repository",
    answerFour: "XData Repository",
    answerFive: "XState Center",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 181,
    category: "React and React-Redux",
    question: "_______ hook lets you read the state from the Redux store.",
    answerOne: "CuseSelector()",
    answerTwo: "XuseDispatch()",
    answerThree: "XuseReact()",
    answerFour: "XuseStore()",
    answerFive: "XuseContext()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 182,
    category: "React and React-Redux",
    question: "React components are often written in a format known as _______.",
    answerOne: "XJavaScriptXML",
    answerTwo: "CJSX",
    answerThree: "XHTMLJS",
    answerFour: "XJavaScriptHTML",
    answerFive: "XJava Scripting XML",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 183,
    category: "React and React-Redux",
    question: "React components defined as classes have additional features, such as _______.",
    answerOne: "XUseState",
    answerTwo: "CLifecycle methods",
    answerThree: "XUseContext",
    answerFour: "XRenderProps",
    answerFive: "XUseEffect",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 184,
    category: "React and React-Redux",
    question: "The _______ hook is used to manage local state of a function component in React.",
    answerOne: "CuseState()",
    answerTwo: "XuseClass()",
    answerThree: "XuseStore()",
    answerFour: "XuseVariable()",
    answerFive: "XuseObject()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 185,
    category: "React and React-Redux",
    question: "In React-Redux, a _______ is a function that creates an action object.",
    answerOne: "CAction Creator",
    answerTwo: "XStore Creator",
    answerThree: "XObject Maker",
    answerFour: "XAction Producer",
    answerFive: "XState Generator",
    timesCorrect: 0,
    timesIncorrect: 0,
  },

  {
    questionNumber: 186,
    category: "Express.js",
    question: "Express.js is a _______ web application framework for Node.js.",
    answerOne: "Xmodular",
    answerTwo: "Xstructured",
    answerThree: "Xsystematic",
    answerFour: "Cminimalist",
    answerFive: "Xsimplified",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 187,
    category: "Express.js",
    question:
      "Express.js provides a robust set of features for web and mobile applications including a myriad of HTTP _______ methods and middleware.",
    answerOne: "Xprocessing",
    answerTwo: "Chelper",
    answerThree: "Xhandler",
    answerFour: "Xresponding",
    answerFive: "Xinteraction",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 188,
    category: "Express.js",
    question:
      "In Express.js, _______ are functions that have access to the request object, the response object, and the next function in the application's request-response cycle.",
    answerOne: "Xhandlers",
    answerTwo: "Xprocessors",
    answerThree: "Cmiddleware functions",
    answerFour: "Xresponders",
    answerFive: "Xtranslators",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 189,
    category: "Express.js",
    question:
      "In Express.js, the order of _______ defined is very important as they are executed in the order they are defined.",
    answerOne: "Xresponses",
    answerTwo: "Xrequests",
    answerThree: "Cmiddleware",
    answerFour: "Xroutes",
    answerFive: "Xcallbacks",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 190,
    category: "Express.js",
    question:
      "To set up a basic server in Express.js, you would use the _______ method of an Express app instance.",
    answerOne: "Xstart",
    answerTwo: "Xrun",
    answerThree: "Xserve",
    answerFour: "Clisten",
    answerFive: "Xinit",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 191,
    category: "Express.js",
    question: "In Express.js, app.use() is used to add _______ to your application.",
    answerOne: "Xfeatures",
    answerTwo: "Xfunctions",
    answerThree: "Cmiddleware",
    answerFour: "Xcontrollers",
    answerFive: "Xlisteners",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 192,
    category: "Express.js",
    question:
      "Express.js uses the concept of routing to determine how an application responds to a client request to a particular _______.",
    answerOne: "Xaddress",
    answerTwo: "Cendpoint",
    answerThree: "XURL",
    answerFour: "Xhandler",
    answerFive: "Xserver",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 193,
    category: "Express.js",
    question:
      "In Express.js, res.json() is a function that sends a JSON response. This method sends a response (with the correct content-type) that is the parameter converted to a JSON _______.",
    answerOne: "Xobject",
    answerTwo: "Xfile",
    answerThree: "Cstring",
    answerFour: "Xformat",
    answerFive: "Xoutput",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 194,
    category: "Express.js",
    question:
      "Express.js makes it easy to define routes of your application. A route can be as simple as a path and a _______.",
    answerOne: "XURL",
    answerTwo: "Xresponse",
    answerThree: "Chandler",
    answerFour: "Xmethod",
    answerFive: "Xdirectory",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 195,
    category: "Express.js",
    question:
      "In Express.js, you can use template engines to generate HTML content on the server side based on your views. Which of the following are such engines?",
    answerOne: "CPug",
    answerTwo: "CMustache",
    answerThree: "CEJS",
    answerFour: "CBlade",
    answerFive: "CHandlebars",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 196,
    category: "Express.js",
    question: "What HTTP method is typically used to update data?",
    answerOne: "CPUT",
    answerTwo: "XGET",
    answerThree: "XPOST",
    answerFour: "XDELETE",
    answerFive: "XFETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 197,
    category: "Express.js",
    question: "Which Express.js function ends the request-response cycle?",
    answerOne: "Xapp.use()",
    answerTwo: "Xapp.listen()",
    answerThree: "Cres.send()",
    answerFour: "Xapp.get()",
    answerFive: "Xapp.post()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 198,
    category: "Express.js",
    question: "To receive form data in Express.js, you can use the _______ middleware.",
    answerOne: "Xurlencoded",
    answerTwo: "Cbody-parser",
    answerThree: "Xquery-parser",
    answerFour: "Xdata-parser",
    answerFive: "Xrequest-parser",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 199,
    category: "Express.js",
    question:
      "What would you use to define a variable that can be used in all views in Express.js?",
    answerOne: "Xapp.get()",
    answerTwo: "Xapp.set()",
    answerThree: "Xapp.variable()",
    answerFour: "Capp.locals",
    answerFive: "Xapp.global()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 200,
    category: "Express.js",
    question: "Express.js is a _______ web application framework for Node.js.",
    answerOne: "Xmodular",
    answerTwo: "Xstructured",
    answerThree: "Xsystematic",
    answerFour: "Cminimalist",
    answerFive: "Xsimplified",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 201,
    category: "Express.js",
    question:
      "In Express.js, app.route() is a convenient method to define routes that belong to the same _______.",
    answerOne: "Xdomain",
    answerTwo: "Xpath",
    answerThree: "Croute path",
    answerFour: "Xgroup",
    answerFive: "Xcallback",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 202,
    category: "Express.js",
    question: "What HTTP method is typically used to read data?",
    answerOne: "XPUT",
    answerTwo: "CGET",
    answerThree: "XPOST",
    answerFour: "XDELETE",
    answerFive: "XFETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 203,
    category: "Express.js",
    question:
      "What would you use to define a variable that can be used only in the current request-response cycle in Express.js?",
    answerOne: "Xres.variable()",
    answerTwo: "Xres.set()",
    answerThree: "Xres.get()",
    answerFour: "Cres.locals",
    answerFive: "Xres.global()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 204,
    category: "Express.js",
    question: "What HTTP method is typically used to create data?",
    answerOne: "XPUT",
    answerTwo: "XGET",
    answerThree: "CPOST",
    answerFour: "XDELETE",
    answerFive: "XFETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 205,
    category: "Express.js",
    question: "In Express.js, what is the correct syntax for handling errors using middleware?",
    answerOne: "Xapp.use((err, req, res, next) => {})",
    answerTwo: "Capp.use((err, req, res, next) => {})",
    answerThree: "Xapp.error((err, req, res, next) => {})",
    answerFour: "Xapp.handle((err, req, res, next) => {})",
    answerFive: "Xapp.catch((err, req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 206,
    category: "Express.js",
    question: "In Express.js, how can you serve static files?",
    answerOne: "Xapp.static()",
    answerTwo: "Xapp.file()",
    answerThree: "Capp.use(express.static())",
    answerFour: "Xapp.serve()",
    answerFive: "Xapp.resource()",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 207,
    category: "Express.js",
    question: "What does the 'next' argument represent in Express.js middleware?",
    answerOne: "XThe next middleware in the application",
    answerTwo: "CThe callback function to call the next middleware in the stack",
    answerThree: "XThe next request that comes into the server",
    answerFour: "XThe next response to be sent to the client",
    answerFive: "XThe next route to be executed",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 208,
    category: "Express.js",
    question: "What HTTP method is typically used to delete data?",
    answerOne: "XPUT",
    answerTwo: "XGET",
    answerThree: "XPOST",
    answerFour: "CDELETE",
    answerFive: "XFETCH",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 209,
    category: "Express.js",
    question: "In Express.js, how can you handle 404 errors that have no other route handlers?",
    answerOne: "Xapp.catch(404, (req, res, next) => {})",
    answerTwo: "Xapp.error(404, (req, res, next) => {})",
    answerThree: "Xapp.handle(404, (req, res, next) => {})",
    answerFour: "Capp.use((req, res, next) => {})",
    answerFive: "Xapp.get(404, (req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
  {
    questionNumber: 210,
    category: "Express.js",
    question:
      "In Express.js, how can you handle all HTTP methods at a specific route using the same function?",
    answerOne: "Xapp.get('*', (req, res, next) => {})",
    answerTwo: "Xapp.use('*', (req, res, next) => {})",
    answerThree: "Xapp.route('*', (req, res, next) => {})",
    answerFour: "Capp.all('*', (req, res, next) => {})",
    answerFive: "Xapp.handle('*', (req, res, next) => {})",
    timesCorrect: 0,
    timesIncorrect: 0,
  },
];
module.exports = questionData;
